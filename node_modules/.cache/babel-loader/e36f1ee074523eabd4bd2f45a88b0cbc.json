{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\IDO\\\\IdeaProjects\\\\client\\\\src\\\\Particles2.js\";\nimport React, { Component } from \"react\";\nimport Particles from \"react-particles-js\";\n\nclass Canvas extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      width: \"0px\",\n      height: \"0px\"\n    };\n\n    this.updateWindowDimensions = () => {\n      this.setState({\n        width: `${window.innerWidth}px`,\n        height: `${window.innerHeight}px`\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  render() {\n    const {\n      width,\n      height\n    } = this.state;\n    console.log(width, height);\n    return /*#__PURE__*/_jsxDEV(Particles, { ...this.state,\n      params: {\n        particles: {\n          number: {\n            value: 30,\n            density: {\n              enable: true,\n              value_area: 800\n            }\n          },\n          color: {\n            value: \"#000000\"\n          },\n          shape: {\n            type: \"circle\",\n            stroke: {\n              width: 0,\n              color: \"#000000\"\n            },\n            image: {\n              src: \"img/github.svg\",\n              width: 100,\n              height: 100\n            }\n          },\n          opacity: {\n            value: 0.4,\n            random: true,\n            anim: {\n              enable: true,\n              speed: 1,\n              opacity_min: 0.1,\n              sync: false\n            }\n          },\n          size: {\n            value: 3,\n            random: true,\n            anim: {\n              enable: true,\n              speed: 2,\n              size_min: 0.1,\n              sync: false\n            }\n          },\n          line_linked: {\n            enable_auto: true,\n            distance: 100,\n            color: \"#fff\",\n            opacity: 1,\n            width: 1,\n            condensed_mode: {\n              enable: false,\n              rotateX: 600,\n              rotateY: 600\n            }\n          },\n          move: {\n            enable: true,\n            speed: 1,\n            direction: \"none\",\n            random: false,\n            straight: false,\n            out_mode: \"out\",\n            bounce: false,\n            attract: {\n              enable: false,\n              rotateX: 600,\n              rotateY: 1200\n            }\n          }\n        },\n        interactivity: {\n          detect_on: \"canvas\",\n          events: {\n            onhover: {\n              enable: false\n            },\n            onclick: {\n              enable: false\n            },\n            resize: true\n          }\n        },\n        retina_detect: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Canvas;","map":{"version":3,"sources":["C:/Users/IDO/IdeaProjects/client/src/Particles2.js"],"names":["React","Component","Particles","Canvas","state","width","height","updateWindowDimensions","setState","window","innerWidth","innerHeight","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","console","log","particles","number","value","density","enable","value_area","color","shape","type","stroke","image","src","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","enable_auto","distance","condensed_mode","rotateX","rotateY","move","direction","straight","out_mode","bounce","attract","interactivity","detect_on","events","onhover","onclick","resize","retina_detect"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Particles from \"react-particles-js\";\r\n\r\nclass Canvas extends Component {\r\n    state = { width: \"0px\", height: \"0px\" };\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\r\n    }\r\n    updateWindowDimensions = () => {\r\n        this.setState({\r\n            width: `${window.innerWidth}px`,\r\n            height: `${window.innerHeight}px`\r\n        });\r\n    };\r\n    render() {\r\n        const { width, height } = this.state;\r\n        console.log(width, height);\r\n        return (\r\n            <Particles\r\n                {...this.state}\r\n                params={{\r\n                    particles: {\r\n                        number: {\r\n                            value: 30,\r\n                            density: {\r\n                                enable: true,\r\n                                value_area: 800\r\n                            }\r\n                        },\r\n                        color: {\r\n                            value: \"#000000\"\r\n                        },\r\n                        shape: {\r\n                            type: \"circle\",\r\n                            stroke: {\r\n                                width: 0,\r\n                                color: \"#000000\"\r\n                            },\r\n                            image: {\r\n                                src: \"img/github.svg\",\r\n                                width: 100,\r\n                                height: 100\r\n                            }\r\n                        },\r\n                        opacity: {\r\n                            value: 0.4,\r\n                            random: true,\r\n                            anim: {\r\n                                enable: true,\r\n                                speed: 1,\r\n                                opacity_min: 0.1,\r\n                                sync: false\r\n                            }\r\n                        },\r\n                        size: {\r\n                            value: 3,\r\n                            random: true,\r\n                            anim: {\r\n                                enable: true,\r\n                                speed: 2,\r\n                                size_min: 0.1,\r\n                                sync: false\r\n                            }\r\n                        },\r\n                        line_linked: {\r\n                            enable_auto: true,\r\n                            distance: 100,\r\n                            color: \"#fff\",\r\n                            opacity: 1,\r\n                            width: 1,\r\n                            condensed_mode: {\r\n                                enable: false,\r\n                                rotateX: 600,\r\n                                rotateY: 600\r\n                            }\r\n                        },\r\n                        move: {\r\n                            enable: true,\r\n                            speed: 1,\r\n                            direction: \"none\",\r\n                            random: false,\r\n                            straight: false,\r\n                            out_mode: \"out\",\r\n                            bounce: false,\r\n                            attract: {\r\n                                enable: false,\r\n                                rotateX: 600,\r\n                                rotateY: 1200\r\n                            }\r\n                        }\r\n                    },\r\n                    interactivity: {\r\n                        detect_on: \"canvas\",\r\n                        events: {\r\n                            onhover: {\r\n                                enable: false\r\n                            },\r\n                            onclick: {\r\n                                enable: false\r\n                            },\r\n                            resize: true\r\n                        }\r\n                    },\r\n                    retina_detect: true\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Canvas;\r\n"]},"metadata":{},"sourceType":"module"}